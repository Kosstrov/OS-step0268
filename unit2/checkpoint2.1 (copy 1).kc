import "string"
#pragma link("mega65hyper.ld")
const char* RASTER = 0xd012;
const char* VIC_MEMORY = 0xd018;
const char* SCREEN = 0x0400;
const char* BGCOL = 0xd021;
const char* COLS = 0xd800;
const char BLACK = 0;
const char WHITE = 1;
char[] MESSAGE = "hello world!";
unsigned char i;
unsigned char j=99;
unsigned char q=40*25;

char *sc;
void main(){
VIC_MEMORY[0] = 0x14;
memset(SCREEN, ' ', 40*25);
memset(COLS, 2, 40*15);

	while(true){
	sc=SCREEN;

for (i=0;i<8;i++) {
	sc[2]=83;
	sc=sc+45;
	*BGCOL=0;
}
for (i=8;i<16;i++) {
	sc[i]=83;
	sc=sc+45;
	*BGCOL=7;
}

for (i=16;i<25;i++) {
	sc[i]=83;
	sc=sc+45;
	*BGCOL=2;
}

}


while(true) continue;

}

void syscall1(){
*(SCREEN+79) = '>';
}
void syscall2(){
*(SCREEN+78) = '<';
}
#pragma data_seg(Syscall)
struct SysCall{
char xjmp;
void()* syscall;
char xnop;
};
const char JMP = 0x4c;
const char NOP = 0xea;
export align(0x100) struct SysCall[] SYSCALLS = {
{ JMP, &syscall1, NOP },
{ JMP, &syscall2, NOP }
};
export align(0x100) struct SysCall[] SYSCALL_RESET = {
{ JMP, &main, NOP }
};